<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.4.0@62db5d4f6a7ae0a20f7cc5a4952d730272fc0863">
  <file src="src/Config.php">
    <ArgumentTypeCoercion occurrences="5">
      <code>$dependencies</code>
      <code>$dependencies</code>
      <code>$dependencies</code>
      <code>$dependencies</code>
      <code>$dependencies</code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction occurrences="2">
      <code>! is_string($object)</code>
      <code>class_exists($object)</code>
    </DocblockTypeContradiction>
    <InvalidFunctionCall occurrences="1">
      <code>$factory($service, new PsrContainer($c), $name)</code>
    </InvalidFunctionCall>
    <MissingClosureParamType occurrences="1">
      <code>$service</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="7">
      <code>function ($service, Container $c) use ($extension, $name) {</code>
      <code>function () use ($container, $dependencies, $alias, $target) {</code>
      <code>function () use ($container, $object, $name) {</code>
      <code>function () use ($instance) {</code>
      <code>function () use ($object) {</code>
      <code>function (Container $c) use ($callback, $name, $delegators) {</code>
      <code>function (Container $c) use ($service) {</code>
    </MissingClosureReturnType>
    <MissingReturnType occurrences="3">
      <code>injectDelegator</code>
      <code>setAlias</code>
      <code>setService</code>
    </MissingReturnType>
    <MixedArgument occurrences="4">
      <code>$delegatorClass</code>
      <code>$dependencies['delegators'][$name]</code>
      <code>$dependencies['delegators'][$object]</code>
      <code>$object</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$instance</code>
      <code>$instance</code>
      <code>$service</code>
    </MixedAssignment>
    <MixedClone occurrences="1">
      <code>clone $instance</code>
    </MixedClone>
    <MixedMethodCall occurrences="4">
      <code>new $delegatorClass()</code>
      <code>new $extension()</code>
      <code>new $object()</code>
      <code>new $object()</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="3">
      <code>! is_int($alias)</code>
      <code>is_array($this-&gt;config['dependencies'])</code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainType occurrences="6">
      <code>! class_exists($object)</code>
      <code>! is_array($dependencies['aliases'])</code>
      <code>! is_array($dependencies['extensions'])</code>
      <code>! is_array($dependencies['factories'])</code>
      <code>! is_array($dependencies['invokables'])</code>
      <code>! is_array($dependencies['services'])</code>
    </TypeDoesNotContainType>
    <UnusedClosureParam occurrences="1">
      <code>$c</code>
    </UnusedClosureParam>
  </file>
  <file src="test/ConfigTest.php">
    <MissingReturnType occurrences="6">
      <code>testInjectConfiguration</code>
      <code>testInjectExtensionForFactory</code>
      <code>testInjectExtensionForInvokable</code>
      <code>testInjectExtensionForService</code>
      <code>testInjectMultipleExtensions</code>
      <code>testInjectMultipleExtensionsAsDecorators</code>
    </MissingReturnType>
  </file>
  <file src="test/ContainerFactoryTest.php">
    <MissingReturnType occurrences="2">
      <code>testContainerIsConfigured</code>
      <code>testFactoryCreatesPsr11Container</code>
    </MissingReturnType>
  </file>
  <file src="test/ContainerTest.php">
    <InvalidArgument occurrences="1">
      <code>['dependencies' =&gt; $config]</code>
    </InvalidArgument>
  </file>
  <file src="test/TestAsset/Extension1Factory.php">
    <MixedMethodCall occurrences="1">
      <code>inject</code>
    </MixedMethodCall>
  </file>
</files>
